clear all;
disp('Distance vector routing protocol');
node=input('Enter the no. of nodes: ');
over=0;
for i=1:node    %initialize
    for j=i:node       
        if(i==j)
    matrix(i,j)=0;
        else
            matrix(i,j)=randint(1,1,9);
            matrix(j,i)=matrix(i,j);
        end
    end
end
disp(matrix);
 i=1;
 x=1;
 
 mat1=triu(matrix);
 for i=1:node
     for j=1:node
         if(mat1(i,j)~=0)
             mat(i,j)=x;
             mat(j,i)=mat(i,j);
             x=x+1;      
         end
     end
 end
view(biograph(triu(matrix),[],'showarrows','off','ShowWeights','on','EdgeTextColor',[0 0 1]));
for from=1:node% fill initial matrix with via = to
    for via=1:node
        for to=1:node           
            if(from~=via&&from~=to)
                if(via==to&&matrix(from,to)~=0)
                    go(to,via,from)=matrix(from,to);
                else
        end
    end
end
i=0;
while(i<2)
for from=1:node
    for to=1:node
        if(from~=to)
            if(matrix(from,to)~=0)%calculate neighbour node
                    go(to,via,from)=100;
                end
            else
                    go(to,via,from)=inf;
            end           
                for x=1:node
                    for y=1:node                    
                        temp(x,y)=matrix(from,to)+min(go(y,:,to));
                        if(temp(x,y)<go(y,to,from)&&go(y,to,from)<inf)
                            go(y,to,from)=temp(x,y);
                        end                      
                    end
                end
            end
        end
    end
end
i=i+1;
end
disp(go);
choice='y';
while(choice=='y')
source=input('Enter the source node: ');
dest=input('Enter the destination node: ');
trace(1)=source;
j=2;
while(source~=dest)
[row,col]=find(go(dest,:,source)==min(go(dest,:,source)));
trace(j)=col;
source=col;
j=j+1;
end
k=1:j-1;
disp(trace(k));
bg=biograph(triu(matrix),[],'showarrows','off','ShowWeights','on','EdgeTextColor',[0 0 1]);
for i=1:j-1
set(bg.nodes(trace(i)), 'color', [1 0 0]);
set(bg.nodes(trace(1)),'color',[0 1 0]);
if(i<j-1)
set(bg.edges(mat(trace(i+1),trace(i))),'linecolor',[1 0 0]);
end
end
view(bg);
choice=input('Do you want to try again (y/n):','s');
end
